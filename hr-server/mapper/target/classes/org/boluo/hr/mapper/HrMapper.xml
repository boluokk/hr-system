<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.boluo.hr.mapper.HrMapper">
    <sql id="column">id, `name`, phone, telephone, address, enabled, username, `password`, user_face, remark</sql>
    <resultMap id="BaseResultMap" type="org.boluo.hr.pojo.Hr">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="phone" property="phone"/>
        <result column="telephone" property="telephone"/>
        <result column="address" property="address"/>
        <result column="enabled" property="enabled"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="user_face" property="userFace"/>
        <result column="remark" property="remark"/>
    </resultMap>
    <resultMap id="BaseHrResultMap" type="org.boluo.hr.pojo.BaseHr" extends="BaseResultMap"/>
    <resultMap id="HasRoleHrResultMap" type="org.boluo.hr.pojo.Hr" extends="BaseResultMap">
        <collection property="roles" ofType="org.boluo.hr.pojo.Role">
            <id property="id" column="role_id"/>
            <result property="name" column="role_name"/>
            <result property="nameZh" column="role_name_zh"/>
        </collection>
    </resultMap>
    <resultMap id="HasRoleWithHrResultMap" type="org.boluo.hr.pojo.Hr" extends="BaseResultMap">
        <collection property="roles" ofType="org.boluo.hr.pojo.Role">
            <id property="id" column="role_id"/>
            <result property="name" column="role_name"/>
            <result property="nameZh" column="role_name_zh"/>
        </collection>
    </resultMap>
    <select id="selectHrByName" resultMap="HasRoleHrResultMap">
        select h.id,
               h.name,
               h.phone,
               h.telephone,
               h.address,
               h.enabled,
               h.user_face,
               h.remark,
               r.id      as role_id,
               r.name    as role_name,
               r.name_zh as role_name_zh
        from hr h
                 left join hr_role hro on h.id = hro.hr_id
                 left join role r on r.id = hro.role_id
        where h.name like concat('%', #{hrName}, '%');
    </select>
    <select id="selectAll" resultMap="HasRoleHrResultMap">
        select h.id,
               h.name,
               h.phone,
               h.telephone,
               h.address,
               h.enabled,
               h.user_face,
               h.remark,
               r.id      as role_id,
               r.name_zh as role_name_zh,
               r.name    as role_name
        from hr h
                 left join hr_role hro on h.id = hro.hr_id
                 left join role r on r.id = hro.role_id
    </select>
    <select id="selectAllExceptCurrentHr" resultMap="BaseHrResultMap">
        select id,
               `name`,
               phone,
               telephone,
               address,
               enabled,
               username,
               user_face,
               remark
        from hr
        where id != #{id}
    </select>
    <select id="loadByUserName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="column"/>
        from hr
        where username = #{username};
    </select>
    <select id="selectRoleWithHrById" resultMap="HasRoleWithHrResultMap" parameterType="java.lang.Integer">
        select r.id as rid, r.name as role_name, r.name_zh as role_name_zh
        from role r,
             hr_role hr
        where r.id = hr.role_id
          and hr.hr_id = #{id}
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="column"/>
        from hr
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByUsername" resultMap="BaseResultMap">
        select
        <include refid="column"/>
        from `hr`
        where username = #{username}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from hr
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insertHr" parameterType="org.boluo.hr.pojo.UploadHr">
        insert into hr
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="telephone != null">
                telephone,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="enabled != null">
                enabled,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="userFace != null">
                user_face,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=CHAR},
            </if>
            <if test="telephone != null">
                #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="enabled != null">
                #{enabled,jdbcType=BIT},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="userFace != null">
                #{userFace,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKey" parameterType="org.boluo.hr.pojo.UploadHr">
        update hr
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=CHAR},
            </if>
            <if test="telephone != null">
                telephone = #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="enabled != null">
                enabled = #{enabled,jdbcType=BIT},
            </if>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="userFace != null">
                user_face = #{userFace,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>