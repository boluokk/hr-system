<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.boluo.hr.mapper.EmployeeRemoveMapper">
    <sql id="column">id, employee_id, before_department_id,
                    before_job_id, after_department_id,after_job_id, remove_date, reason, remark</sql>
    <resultMap id="BaseResultMap" type="org.boluo.hr.pojo.EmployeeRemove">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="employee_id" property="employeeId" jdbcType="INTEGER"/>
        <result column="after_department_id" property="afterDepartmentId" jdbcType="INTEGER"/>
        <result column="after_job_id" property="afterJobId" jdbcType="INTEGER"/>
        <result column="before_department_id" property="beforeDepartmentId" jdbcType="INTEGER"/>
        <result column="before_job_id" property="beforeJobId" jdbcType="INTEGER"/>
        <result column="remove_date" property="removeDate" jdbcType="DATE"/>
        <result column="reason" property="reason" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <association property="employee" column="employee_id"
                     select="org.boluo.hr.mapper.EmployeeMapper.selectByPrimaryKey"/>
        <association property="beforeDepartmentName" column="before_department_id"
                     select="org.boluo.hr.mapper.DepartmentMapper.selectNameByKey"/>
        <association property="beforeJobName" column="before_job_id"
                     select="org.boluo.hr.mapper.JobLevelMapper.selectNameByKey"/>
        <association property="afterDepartmentName" column="after_department_id"
                     select="org.boluo.hr.mapper.DepartmentMapper.selectNameByKey"/>
        <association property="afterJobName" column="after_job_id"
                     select="org.boluo.hr.mapper.JobLevelMapper.selectNameByKey"/>
    </resultMap>
    <select id="selectAll" resultMap="BaseResultMap">
        select <include refid="column"/>
        from employee_remove
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
        select <include refid="column"/>
        from employee_remove
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from employee_remove
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insertEmployeeRemove" parameterType="org.boluo.hr.pojo.BaseEmployeeRemove">
        insert into employee_remove
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="employeeId != null">
                employee_id,
            </if>
            <if test="afterDepartmentId != null">
                after_department_id,
            </if>
            <if test="afterJobId != null">
                after_job_id,
            </if>
            <if test="beforeDepartmentId != null">
                before_department_id,
            </if>
            <if test="beforeJobId != null">
                before_job_id,
            </if>
            <if test="removeDate != null">
                remove_date,
            </if>
            <if test="reason != null">
                reason,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="employeeId != null">
                #{employeeId,jdbcType=INTEGER},
            </if>
            <if test="afterDepartmentId != null">
                #{afterDepartmentId,jdbcType=INTEGER},
            </if>
            <if test="afterJobId != null">
                #{afterJobId,jdbcType=INTEGER},
            </if>
            <if test="beforeDepartmentId != null">
                #{beforeDepartmentId,jdbcType=DATE},
            </if>
            <if test="beforeJobId != null">
                #{beforeJobId,jdbcType=VARCHAR},
            </if>
            <if test="removeDate != null">
                #{removeDate,jdbcType=VARCHAR},
            </if>
            <if test="reason != null">
                #{reason,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKey" parameterType="org.boluo.hr.pojo.BaseEmployeeRemove">
        update employee_remove
        <set>
            <if test="employeeId != null">
                employee_id = #{employeeId,jdbcType=INTEGER},
            </if>
            <if test="afterDepartmentId != null">
                after_department_id = #{afterDepartmentId,jdbcType=INTEGER},
            </if>
            <if test="afterJobId != null">
                after_job_id = #{afterJobId,jdbcType=INTEGER},
            </if>
            <if test="beforeDepartmentId != null">
                before_department_id = #{beforeDepartmentId,jdbcType=DATE},
            </if>
            <if test="beforeJobId != null">
                before_job_id = #{beforeJobId,jdbcType=VARCHAR},
            </if>
            <if test="removeDate != null">
                remove_date = #{removeDate,jdbcType=VARCHAR},
            </if>
            <if test="reason != null">
                reason = #{reason,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>