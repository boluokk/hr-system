<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.boluo.hr.mapper.EmployeeMapper">
    <sql id="column">
        id, `name`, gender, birthday, id_card, wedlock, nation_id, native_place, politic_id, email,
        phone, address, department_id, job_level_id, pos_id, engage_form, tiptop_degree, specialty,
        school, begin_date, work_state, work_id, contract_term, conversion_time, not_work_date,
        begin_contract, end_contract, work_age
    </sql>
    <resultMap id="BaseResultMap" type="org.boluo.hr.pojo.Employee">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="gender" property="gender" jdbcType="CHAR"/>
        <result column="birthday" property="birthday" jdbcType="DATE"/>
        <result column="id_card" property="idCard" jdbcType="CHAR"/>
        <result column="wedlock" property="wedlock" jdbcType="CHAR"/>
        <result column="nation_id" property="nationId" jdbcType="INTEGER"/>
        <result column="native_place" property="nativePlace" jdbcType="VARCHAR"/>
        <result column="politic_id" property="politicId" jdbcType="INTEGER"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="department_id" property="departmentId" jdbcType="INTEGER"/>
        <result column="job_level_id" property="jobLevelId" jdbcType="INTEGER"/>
        <result column="pos_id" property="posId" jdbcType="INTEGER"/>
        <result column="engage_form" property="engageForm" jdbcType="VARCHAR"/>
        <result column="tiptop_degree" property="tiptopDegree" jdbcType="CHAR"/>
        <result column="specialty" property="specialty" jdbcType="VARCHAR"/>
        <result column="school" property="school" jdbcType="VARCHAR"/>
        <result column="begin_date" property="beginDate" jdbcType="DATE"/>
        <result column="work_state" property="workState" jdbcType="CHAR"/>
        <result column="work_id" property="workId" jdbcType="CHAR"/>
        <result column="contract_term" property="contractTerm" jdbcType="DOUBLE"/>
        <result column="conversion_time" property="conversionTime" jdbcType="DATE"/>
        <result column="not_work_date" property="notWorkDate" jdbcType="DATE"/>
        <result column="begin_contract" property="beginContract" jdbcType="DATE"/>
        <result column="end_contract" property="endContract" jdbcType="DATE"/>
        <result column="work_age" property="workAge" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="enhanceEmployee" type="org.boluo.hr.pojo.Employee" extends="BaseResultMap">
        <association property="nation" javaType="org.boluo.hr.pojo.Nation">
            <id property="id" column="nid"/>
            <result property="name" column="nname"/>
        </association>
        <association property="politicsStatus" javaType="org.boluo.hr.pojo.PoliticsStatus">
            <id property="id" column="poliid"/>
            <result property="name" column="poname"/>
        </association>
        <association property="department" javaType="org.boluo.hr.pojo.Department">
            <id property="id" column="depid"/>
            <result property="name" column="depname"/>
        </association>
        <association property="jobLevel" javaType="org.boluo.hr.pojo.JobLevel">
            <id property="id" column="jobid"/>
            <result property="name" column="jobname"/>
            <result property="titleLevel" column="joblename"/>
        </association>
        <association property="position" javaType="org.boluo.hr.pojo.Position">
            <id property="id" column="posid"/>
            <result property="name" column="posiname"/>
        </association>
    </resultMap>
    <select id="selectByEmployeeCount" resultType="java.lang.Integer" parameterType="org.boluo.hr.pojo.Employee">
        select count(distinct work_id)
        from employee emp
        <where>
            <if test="employee.name != null and employee.name != ''">
                emp.name like concat('%',#{employee.name},'%')
            </if>
            <if test="employee.politicId != null and employee.politicId != ''">
                and emp.politic_id = #{employee.politicId}
            </if>
            <if test="employee.nationId != null and employee.nationId != ''">
                and emp.nation_id = #{employee.nationId}
            </if>
            <if test="employee.jobLevelId != null and employee.jobLevelId != ''">
                and emp.job_level_id = #{employee.jobLevelId}
            </if>
            <if test="employee.politicId != null and employee.politicId != ''">
                and emp.politic_id = #{employee.politicId}
            </if>
            <if test="employee.posId != null and employee.posId!= ''">
                and emp.pos_id = #{employee.posId}
            </if>
            <if test="employee.beginDate != null and employee.conversionTime != null">
                and emp.begin_date between #{employee.beginDate} and #{employee.conversionTime}
            </if>
            <if test="employee.engageForm !=null and employee.engageForm !=null">
                and emp.engage_form = #{employee.engageForm}
            </if>
        </where>
    </select>
    <select id="selectByEmployee" resultMap="enhanceEmployee" parameterType="org.boluo.hr.pojo.Employee">
        select emp.*,n.name as nname,n.id as nid,poli.name as poname,poli.id as poliid,dep.`name` as depname,dep.id as
        depid,job.name as jobname,job.id as jobid,job.title_level as joblename,posi.name as posiname,posi.id as posiid
        from employee emp,nation n,politics_status poli,department dep,job_level job,`position` posi
        where emp.nation_id = n.id and emp.politic_id = poli.id and emp.department_id =dep.id
        and emp.job_level_id =job.id and emp.pos_id = posi.id
        <if test="employee.name != null and employee.name != ''">
            and emp.name like concat('%',#{employee.name},'%')
        </if>
        <if test="employee.politicId != null and employee.politicId != ''">
            and emp.politic_id = #{employee.politicId}
        </if>
        <if test="employee.nationId != null and employee.nationId != ''">
            and emp.nation_id = #{employee.nationId}
        </if>
        <if test="employee.jobLevelId != null and employee.jobLevelId != ''">
            and emp.job_level_id = #{employee.jobLevelId}
        </if>
        <if test="employee.politicId != null and employee.jobLevelId != ''">
            and emp.politic_id = #{employee.politicId}
        </if>
        <if test="employee.posId != null and employee.posId!= ''">
            and emp.pos_id = #{employee.posId}
        </if>
        <if test="employee.departmentId != null and employee.departmentId!= ''">
            and emp.department_id = #{employee.departmentId}
        </if>
        <if test="employee.beginDate !=null and employee.conversionTime !=null">
            and emp.begin_date between #{employee.beginDate} and #{employee.conversionTime}
        </if>
        <if test="employee.engageForm !=null and employee.engageForm !=null">
            and emp.engage_form = #{employee.engageForm}
        </if>
    </select>
    <delete id="batchDeleteEmployee">
        delete from employee
        where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>
    <select id="selectMaxByWorkId" resultType="java.lang.Integer">
        select max(work_id)
        from employee
    </select>
    <select id="selectEnhanceEmployeeByEmployeeId" resultMap="enhanceEmployee">
        select emp.*,
               n.name         as nname,
               n.id           as nid,
               poli.name      as poname,
               poli.id        as poliid,
               dep.`name`     as depname,
               dep.id         as depid,
               job.name       as jobname,
               job.id         as jobid,
               job.title_level as joblename,
               posi.name      as posiname,
               posi.id        as posiid
        from employee emp,
             nation n,
             politics_status poli,
             department dep,
             job_level job,
             position posi
        where emp.nation_id = n.id
          and emp.politic_id = poli.id
          and emp.department_id = dep.id
          and emp.job_level_id = job.id
          and emp.pos_id = posi.id
          and emp.id = #{id}
    </select>
    <select id="selectByEmpName" resultMap="enhanceEmployee">
        select emp.*,
               n.name         as nname,
               n.id           as nid,
               poli.name      as poname,
               poli.id        as poliid,
               dep.`name`     as depname,
               dep.id         as depid,
               job.name       as jobname,
               job.id         as jobid,
               job.title_level as joblename,
               posi.name      as posiname,
               posi.id        as posiid
        from employee emp,
             nation n,
             politics_status poli,
             department dep,
             job_level job,
             position posi
        where emp.nation_id = n.id
          and emp.politic_id = poli.id
          and emp.department_id = dep.id
          and emp.job_level_id = job.id
          and emp.pos_id = posi.id
          and emp.name like concat('%', #{empName}, '%')
    </select>
    <select id="selectAll" resultMap="enhanceEmployee">
        select emp.*,
               n.name         as nname,
               n.id           as nid,
               poli.name      as poname,
               poli.id        as poliid,
               dep.`name`     as depname,
               dep.id         as depid,
               job.name       as jobname,
               job.id         as jobid,
               job.title_level as joblename,
               posi.name      as posiname,
               posi.id        as posiid
        from employee emp,
             nation n,
             politics_status poli,
             department dep,
             job_level job,
             position posi
        where emp.nation_id = n.id
          and emp.politic_id = poli.id
          and emp.department_id = dep.id
          and emp.job_level_id = job.id
          and emp.pos_id = posi.id
    </select>
    <select id="selectCount" resultType="java.lang.Integer">
        select count(*)
        from employee
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select <include refid="column"/>
        from employee
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from employee
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="batchInsertEmployee">
        insert into employee (name, gender,
                              birthday, id_card, wedlock, nation_id,
                              nation_id, politic_id, email,
                              phone, address, department_id,
                              job_level_id, pos_id, engage_form,
                              tiptop_degree, specialty, school,
                              begin_date, work_state, work_id,
                              contract_term, conversion_time, not_work_date,
                              begin_contract, end_contract, work_age)
        values <foreach collection="list" item="emp" separator=",">
            (#{emp.name,jdbcType=VARCHAR}, #{emp.gender,jdbcType=CHAR},
            #{emp.birthday,jdbcType=DATE}, #{emp.idcard,jdbcType=CHAR}, #{emp.wedlock,jdbcType=CHAR},
            #{emp.nationid,jdbcType=INTEGER},
            #{emp.nativeplace,jdbcType=VARCHAR}, #{emp.politicid,jdbcType=INTEGER}, #{emp.email,jdbcType=VARCHAR},
            #{emp.phone,jdbcType=VARCHAR}, #{emp.address,jdbcType=VARCHAR}, #{emp.departmentid,jdbcType=INTEGER},
            #{emp.joblevelid,jdbcType=INTEGER}, #{emp.posid,jdbcType=INTEGER}, #{emp.engageform,jdbcType=VARCHAR},
            #{emp.tiptopdegree,jdbcType=CHAR}, #{emp.specialty,jdbcType=VARCHAR}, #{emp.school,jdbcType=VARCHAR},
            #{emp.begindate,jdbcType=DATE}, #{emp.workstate,jdbcType=CHAR}, #{emp.workid,jdbcType=CHAR},
            #{emp.contractterm,jdbcType=DOUBLE}, #{emp.conversiontime,jdbcType=DATE}, #{emp.notworkdate,jdbcType=DATE},
            #{emp.begincontract,jdbcType=DATE}, #{emp.endcontract,jdbcType=DATE}, #{emp.workage,jdbcType=INTEGER}
            )
        </foreach>
    </insert>
    <insert id="insertEmployee" parameterType="org.boluo.hr.pojo.Employee" useGeneratedKeys="true" keyProperty="id">
        insert into employee
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="idCard != null">
                id_card,
            </if>
            <if test="wedlock != null">
                wedlock,
            </if>
            <if test="nationId != null">
                nation_id,
            </if>
            <if test="nativePlace != null">
                native_place,
            </if>
            <if test="politicId != null">
                politic_id,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="departmentId != null">
                department_id,
            </if>
            <if test="jobLevelId != null">
                job_level_id,
            </if>
            <if test="posId != null">
                pos_id,
            </if>
            <if test="engageForm != null">
                engage_form,
            </if>
            <if test="tiptopDegree != null">
                tiptop_degree,
            </if>
            <if test="specialty != null">
                specialty,
            </if>
            <if test="school != null">
                school,
            </if>
            <if test="beginDate != null">
                begin_date,
            </if>
            <if test="workState != null">
                work_state,
            </if>
            <if test="workId != null">
                work_id,
            </if>
            <if test="contractTerm != null">
                contract_term,
            </if>
            <if test="conversionTime != null">
                conversion_time,
            </if>
            <if test="notWorkDate != null">
                not_work_date,
            </if>
            <if test="beginContract != null">
                begin_contract,
            </if>
            <if test="endContract != null">
                end_contract,
            </if>
            <if test="workAge != null">
                work_age,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=CHAR},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=DATE},
            </if>
            <if test="idCard != null">
                #{idCard,jdbcType=CHAR},
            </if>
            <if test="wedlock != null">
                #{wedlock,jdbcType=CHAR},
            </if>
            <if test="nationId != null">
                #{nationId,jdbcType=INTEGER},
            </if>
            <if test="nativePlace != null">
                #{nativePlace,jdbcType=VARCHAR},
            </if>
            <if test="politicId != null">
                #{politicId,jdbcType=INTEGER},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="departmentId != null">
                #{departmentId,jdbcType=INTEGER},
            </if>
            <if test="jobLevelId != null">
                #{jobLevelId,jdbcType=INTEGER},
            </if>
            <if test="posId != null">
                #{posId,jdbcType=INTEGER},
            </if>
            <if test="engageForm != null">
                #{engageForm,jdbcType=VARCHAR},
            </if>
            <if test="tiptopDegree != null">
                #{tiptopDegree,jdbcType=CHAR},
            </if>
            <if test="specialty != null">
                #{specialty,jdbcType=VARCHAR},
            </if>
            <if test="school != null">
                #{school,jdbcType=VARCHAR},
            </if>
            <if test="beginDate != null">
                #{beginDate,jdbcType=DATE},
            </if>
            <if test="workState != null">
                #{workState,jdbcType=CHAR},
            </if>
            <if test="workId != null">
                #{workId,jdbcType=CHAR},
            </if>
            <if test="contractTerm != null">
                #{contractTerm,jdbcType=DOUBLE},
            </if>
            <if test="conversionTime != null">
                #{conversionTime,jdbcType=DATE},
            </if>
            <if test="notWorkDate != null">
                #{notWorkDate,jdbcType=DATE},
            </if>
            <if test="beginContract != null">
                #{beginContract,jdbcType=DATE},
            </if>
            <if test="endContract != null">
                #{endContract,jdbcType=DATE},
            </if>
            <if test="workAge != null">
                #{workAge,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="selectNations" resultType="org.boluo.hr.pojo.Nation">

    </select>
    <update id="updateByPrimaryKey" parameterType="org.boluo.hr.pojo.Employee">
        update employee
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=CHAR},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=DATE},
            </if>
            <if test="idCard != null">
                id_card = #{idCard,jdbcType=CHAR},
            </if>
            <if test="wedlock != null">
                wedlock = #{wedlock,jdbcType=CHAR},
            </if>
            <if test="nationId != null">
                nation_id = #{nationId,jdbcType=INTEGER},
            </if>
            <if test="nativePlace != null">
                native_place = #{nativePlace,jdbcType=VARCHAR},
            </if>
            <if test="politicId != null">
                politic_id = #{politicId,jdbcType=INTEGER},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="departmentId != null">
                department_id = #{departmentId,jdbcType=INTEGER},
            </if>
            <if test="jobLevelId != null">
                job_level_id = #{jobLevelId,jdbcType=INTEGER},
            </if>
            <if test="posId != null">
                pos_id = #{posId,jdbcType=INTEGER},
            </if>
            <if test="engageForm != null">
                engage_form = #{engageForm,jdbcType=VARCHAR},
            </if>
            <if test="tiptopDegree != null">
                tiptop_degree = #{tiptopDegree,jdbcType=CHAR},
            </if>
            <if test="specialty != null">
                specialty = #{specialty,jdbcType=VARCHAR},
            </if>
            <if test="school != null">
                school = #{school,jdbcType=VARCHAR},
            </if>
            <if test="beginDate != null">
                begin_date = #{beginDate,jdbcType=DATE},
            </if>
            <if test="workState != null">
                work_state = #{workState,jdbcType=CHAR},
            </if>
            <if test="workId != null">
                work_id = #{workId,jdbcType=CHAR},
            </if>
            <if test="contractTerm != null">
                contract_term = #{contractTerm,jdbcType=DOUBLE},
            </if>
            <if test="conversionTime != null">
                conversion_time = #{conversionTime,jdbcType=DATE},
            </if>
            <if test="notWorkDate != null">
                not_work_date = #{notWorkDate,jdbcType=DATE},
            </if>
            <if test="beginContract != null">
                begin_contract = #{beginContract,jdbcType=DATE},
            </if>
            <if test="endContract != null">
                end_contract = #{endContract,jdbcType=DATE},
            </if>
            <if test="workAge != null">
                work_age = #{workAge,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByEmployeeByWorkId" resultMap="BaseResultMap">
        select <include refid="column"/>
        from employee
        where work_id = #{workId}
    </select>
</mapper>